---

  - hosts: all
    become: yes

    vars:
      jenkins_repo_url: http://pkg.jenkins.io/redhat
      jenkins_gpg_key_url: https://pkg.jenkins.io/redhat/jenkins.io.key
      java_packages:
        - java-1.8.0-openjdk.x86_64
        - java-1.8.0-openjdk-devel
      global_tools:
        - git
        - docker
        - docker-devel
        - docker-latest
        - docker-common
        - docker-client-latest
        - docker-client
        - docker-unit-test

    tasks:

      - name: Install Java
        yum:
          name: "{{ java_packages }}"
          state: present

      - name: Install Jenkins Global Tools
        yum:
          name: "{{ global_tools }}"
          state: present

      - name: Add Jenkins yum repo
        yum_repository:
          name: jenkins
          description: Jenkins
          baseurl: "{{ jenkins_repo_url }}"
          gpgcheck: yes
          gpgkey: "{{ jenkins_gpg_key_url }}"

      - name: Open Jenkins port
        firewalld:
          port: 8080/tcp
          permanent: true
          state: enabled

      - name: Install Jenkins
        yum:
          name: jenkins
          state: latest

      - name: Ensure Jenkins is started
        service:
          name: jenkins
          state: started
          enabled: yes

      - name: Pause for Jenkins service to start
        pause:
          seconds: 30

      - name: Get Jenkins admin password
        shell: cat /var/lib/jenkins/secrets/initialAdminPassword
        register: jenkins_admin_password

      - name: Ensure installed_plugins directory exists
        file:
          name: installed_plugins
          state: directory
        become: no

      - name: Load jenkins_repo_url
        include_vars:
          file: vars/jenkins_plugins.yml

      - name: Ensure jenkins plugins are installed
        shell: "sudo java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s http://127.0.0.1:8080/ -auth admin:{{ jenkins_admin_password.stdout }} install-plugin {{ item }} && touch installed_plugins/{{ item }}.success"
        args:
          creates: "installed_plugins/{{ item }}.success"
        with_items:
          - "{{ jenkins_plugins }}"
        register: plugins
        become: no

      - name: Restart jenkins if required
        service:
          name: jenkins
          state: restarted
        when: plugins.changed

      - name: Ensure jenkins admin user has been created
        script: scripts/create_admin_user.sh
        args:
          creates: jenkins_admin_user.success
        become: no

      - name: Output password to user
        debug:
          msg: "The administrator password for Jekins is {{ jenkins_admin_password.stdout }}"
